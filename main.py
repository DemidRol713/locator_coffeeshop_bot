import telebot
from sqlalchemy import create_engine
from sqlalchemy.orm import Session
from telebot import types
import logging

import config
from model.coffeeshop import CoffeeShop
from service.coffeeshop_service import CoffeeShopService

bot = telebot.TeleBot(config.TG_TOKEN)
engine = create_engine(config.DATA_BASE)
session = Session(bind=engine)

logger = telebot.logger
# telebot.logger.basicConfig(filename='filename.log', level=logging.DEBUG,
#                     format=' %(asctime)s - %(levelname)s - %(message)s')
telebot.logger.setLevel(logging.DEBUG)

if __name__ == '__main__':
    import app


def get_menu_btn(markup):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    :return:
    """
    btn_list = [types.KeyboardButton(btn) for btn in config.MENU]
    for btn in btn_list:
        markup.add(btn)

    return markup


@bot.message_handler(commands=['start'])
def start(message):
    """
    –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    :param message:
    :return:
    """

    markup = types.ReplyKeyboardMarkup()
    markup = get_menu_btn(markup)

    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ –∫–æ—Ñ–µ–π–Ω –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏!", reply_markup=markup)


@bot.message_handler(commands=['menu'])
def menu(message):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
    :param message:
    :return:
    """
    markup = types.InlineKeyboardMarkup()
    btn_description = types.InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞', callback_data='description')
    btn_coffee_shop_nearby = types.InlineKeyboardButton(text='–ö–æ—Ñ–µ–π–Ω–∏ —Ä—è–¥–æ–º', callback_data='coffee_shop_nearby')
    markup.add(btn_description)
    markup.add(btn_coffee_shop_nearby)

    bot.send_message(message.from_user.id, "–ß—Ç–æ –Ω—É–∂–Ω–æ?", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'description')
def description_option_bot(call):
    """
    –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
    :param call:
    :return:
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    bot.send_message(call.from_user.id, "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –Ω–æ –ø–æ–∫–∞ –Ω–µ—Ç!", reply_markup=markup)


@bot.message_handler(commands=['list_all_coffeeshop'])
def list_all_coffeeshop(message):
    """
    –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ—Ñ–µ–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    :param message:
    :return:
    """
    markup = types.InlineKeyboardMarkup()
    coffeeshop_list = session.query(CoffeeShop).limit(10)
    for coffeeshop in coffeeshop_list:
        markup.add(types.InlineKeyboardButton(text=coffeeshop.name, callback_data='coffeeshop_{id}'.format(id=coffeeshop.id)))

    bot.send_message(message.from_user.id, "–ß—Ç–æ –Ω—É–∂–Ω–æ?", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: 'coffeeshop' in call.data)
def coffeeshop_card(call):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    coffeeshop_id = int(call.data.split('_')[-1])
    coffeeshop = session.query(CoffeeShop).get(coffeeshop_id)
    text = '–û–ø–∏—Å–∞–Ω–∏–µ:\n {description}\n–ê–¥—Ä–µ—Å:\n {address}\n–°–æ—Ü.—Å–µ—Ç–∏ –∏ —Å–∞–π—Ç—ã:\n'.format(
        description=coffeeshop.description,
        address=coffeeshop.address
    )
    for website in coffeeshop.website:
        text += website + '\n'

    bot.send_message(call.from_user.id, text, reply_markup=markup)
    bot.send_location(call.from_user.id, coffeeshop.latitude, coffeeshop.longitude)


@bot.callback_query_handler(func=lambda call: 'coffee_shop_nearby' in call.data)
def user_location(call):
    """
    –ü—Ä–æ—Å–∏—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ

    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    geolocation = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è', request_location=True)
    markup.add(geolocation)
    bot.send_message(call.from_user.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –∫–æ—Ñ–µ–π–Ω–∏ –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏',
                     reply_markup=markup)


@bot.message_handler(content_types=['location'])
def coffeeshop_nearby(message: types.Message):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—Ñ–µ–π–Ω –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏
    """
    service = CoffeeShopService(session)
    markup = types.InlineKeyboardMarkup()
    bot.send_message(message.from_user.id, '–ò–¥–µ—Ç –ø–æ–∏—Å–∫ –∫–æ—Ñ–µ–µ–Ω –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏', reply_markup=get_menu_btn(types.ReplyKeyboardMarkup()))

    # data = service.get_coffeeshop_nearby(message.location.latitude, message.location.longitude)
    data = service.get_coffeeshop_nearby(60.016208, 30.372300)
    for coffeeshop in data:
        text = '{name}  {distance} –∫–º'.format(
            name=coffeeshop.name,
            distance=coffeeshop.distance
        )
        markup.add(types.InlineKeyboardButton(text=text, callback_data=f'coffeeshop_{coffeeshop.id}'))

    bot.send_message(message.from_user.id, '–í —Ä–∞–¥–∏—É—Å–µ 2 –∫–º:', reply_markup=markup)
